import datetime as dt
from discord import Embed

class pars():
    def __init__(self):
        self.last_data = ''
        self.last_server_status = ''
        self.color_list = {
        'gray' : 12237498,
        'green' : 65280,
        'blue' : 2518253,
        'purple' : 12464383,
        'red' : 16711680,
        'orange' : 15763456,
        }
        
        self.emb_dict = {
        "title": '',
        "color": '',
        "description": '',
        "timestamp": "",
        "author": {
        "name": "[HVOLT] WoTB Statistics"
        },
        "image": {},
        "thumbnail": {},
        "footer": {
        "text": ""
        },
        "fields": []
        }
        
    def color_set_online(self, online):
        color = 000000
        if online < 8000:
            color = self.color_list['red']
        elif online < 15000:
            color = self.color_list['orange']
        elif online >= 15000:
            color = self.color_list['green']
        return color
            
    def color_set_winrate(self, winrate):
        color = 000000
        if winrate < 48:
            color = self.color_list['gray']
        elif winrate < 60:
            color = self.color_list['green']
        elif winrate < 70:
            color = self.color_list['blue']
        elif winrate >= 70:
            color = self.color_list['purple']
        return color
        
    def server_status(self,data):
        players_online = data['data']['wotb'][0]['players_online']
        server_name = data['data']['wotb'][0]['server']
        self.last_server_status = f'''
üñ•Ô∏è –°–µ—Ä–≤–µ—Ä: {server_name}
üéØ –ò–≥—Ä–æ–∫–æ–≤ –æ–Ω–ª–∞–π–Ω: {players_online:,}
üñçÔ∏è –°—Ç–∞—Ç—É—Å: ONLINE
'''
        emb_dict = self.emb_dict
        emb_dict['title'] = '–°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–µ—Ä–æ–≤ WoT Blitz'
        emb_dict['color'] = self.color_set_online(players_online)
        emb_dict['description'] = self.last_server_status
        emb_dict['footer']['text'] = 'üî∏ –¶–≤–µ—Ç —Ä–∞–º–∫–∏ —Ç–µ–∫—Å—Ç–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Ç–µ–∫—É—â–µ–≥–æ –æ–Ω–ª–∞–π–Ω–∞'
        embed = Embed.from_dict(emb_dict)
        return embed
        
    def get_data(self,data,id):
        id = str(id)
        d = data
        
        # stats_variables:
            
        # common:
        nickname = d['data'][id]['nickname']
        created_at = dt.datetime.fromtimestamp(d['data'][id]['created_at'])
        datetime_now = dt.datetime.now()
        account_age = datetime_now - created_at ; account_age = account_age.days
        last_battle = dt.datetime.fromtimestamp(d['data'][id]['last_battle_time'])
        updated_at = dt.date.fromtimestamp(d['data'][id]['updated_at'])
        
        # battle_stats:
        spotted = d['data'][id]['statistics']['all']['spotted']
        hits = d['data'][id]['statistics']['all']['hits']
        frags = d['data'][id]['statistics']['all']['frags']
        max_xp = d['data'][id]['statistics']['all']['max_xp']
        wins = d['data'][id]['statistics']['all']['wins']
        losses = d['data'][id]['statistics']['all']['losses']
        capture_points = d['data'][id]['statistics']['all']['capture_points']
        battles = d['data'][id]['statistics']['all']['battles']
        damage_dealt = d['data'][id]['statistics']['all']['damage_dealt']
        damage_received = d['data'][id]['statistics']['all']['damage_received']
        max_frags = d['data'][id]['statistics']['all']['max_frags']
        shots = d['data'][id]['statistics']['all']['shots']
        frags8p = d['data'][id]['statistics']['all']['frags8p']
        xp = d['data'][id]['statistics']['all']['xp']
        win_and_survived = d['data'][id]['statistics']['all']['win_and_survived']
        survived_battles = d['data'][id]['statistics']['all']['survived_battles']
        dropped_capture_point = d['data'][id]['statistics']['all']['dropped_capture_points']
        
        # custom_stats
        if battles == 0:
            winrate = 0
            accuracy = 0
            survival = 0
            rd_damage = 0
            fr8_fr = 0
            capture_points_coeff = 0
        else:
            winrate = round((wins / battles)*100,2)
            accuracy = round((hits / shots)*100,2)
            survival = round((survived_battles / battles)*100,2)
            rd_damage = round((damage_dealt / damage_received),2)
            fr8_fr = round((frags8p / (frags-frags8p)),2)
            capture_points_coeff = round((capture_points/dropped_capture_point),2)
            
        # text:
        self.last_data = f'''```
--------|–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è|------
‚ïî|–ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω: {created_at}
‚ï†|ID –ê–∫–∫–∞—É–Ω—Ç–∞: {id}
‚ï†|–ü–æ—Å–ª–µ–¥–Ω—ã–π –±–æ–π: {last_battle}
‚ï†|–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞: {updated_at}
‚ïö|–í–æ–∑—Ä–∞—Å—Ç –∞–∫–∫–∞—É–Ω—Ç–∞: {account_age} –¥–Ω–µ–π.
---------|–ë–æ–µ–≤–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞|--------
‚ïî|–ë–æ—ë–≤ —Å—ã–≥—Ä–∞–Ω–æ: {battles:,}
‚ï†|–ü–æ–±–µ–¥—ã:  {wins:,}
‚ï†|–ü–æ—Ä–∞–∂–µ–Ω–∏—è:  {losses:,}
‚ïö|–ü—Ä–æ—Ü–µ–Ω—Ç –ø–æ–±–µ–¥:  {winrate}%

‚ïî|–í—ã—Å—Ç—Ä–µ–ª—ã:  {shots:,}
‚ï†|–ü–æ–ø–∞–¥–∞–Ω–∏—è:  {hits:,}
‚ïö|–¢–æ—á–Ω–æ—Å—Ç—å —Å—Ç—Ä–µ–ª—å–±—ã:  {accuracy}%

‚ïî|–í—ã–∂–∏–ª –≤ –±–æ—è—Ö:  {survived_battles:,}
‚ï†|–ü–æ–±–µ–¥–∏–ª –∏ –≤—ã–∂–∏–ª:  {win_and_survived:,}
‚ïö|–ü—Ä–æ—Ü–µ–Ω—Ç –≤—ã–∂–∏–≤–∞–Ω–∏—è:  {survival}%

‚ïî|–ù–∞–Ω–µ—Å–µ–Ω–æ —É—Ä–æ–Ω–∞:  {damage_dealt:,}
‚ï†|–ü–æ–ª—É—á–µ–Ω–æ —É—Ä–æ–Ω–∞:  {damage_received:,}
‚ïö|–°–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —É—Ä–æ–Ω–∞  (–Ω/–ø): {rd_damage}

‚ïî|–£–Ω–∏—á—Ç–æ–∂–µ–Ω–æ —Ç–∞–Ω–∫–æ–≤:  {frags:,}
‚ï†|–£–Ω–∏—á—Ç–æ–∂–µ–Ω–æ —Ç–∞–Ω–∫–æ–≤ >= 8 —É—Ä:  {frags8p:,}
‚ïö|–ö–ª—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç frags8p:  {fr8_fr}

‚ïî|–û—á–∫–∏ –∑–∞—Ö–≤–∞—Ç–∞:  {capture_points:,}
‚ïö|–°–±–∏—Ç—ã–µ –æ—á–∫–∏ –∑–∞—Ö–≤–∞—Ç–∞:  {dropped_capture_point:,}

‚ïî|–í—Å–µ–≥–æ –æ–ø—ã—Ç–∞:  {xp:,}
‚ïö|–ú–∞–∫—Å–∏–º—É–º –æ–ø—ã—Ç–∞ –∑–∞ –±–æ–π:  {max_xp:,}

‚ïê|–ú–∞–∫—Å–∏–º—É–º —É–Ω–∏—á—Ç–æ–∂–µ–Ω–æ –∑–∞ –±–æ–π:  {max_frags:,}
```'''
        emb_dict_stats = {
        "title": nickname,
        "color": self.color_set_winrate(winrate),
        "description": self.last_data,
        "timestamp": "",
        "author": {
        "name": "[HVOLT] WoTB Statistics"
        },
        "image": {},
        "thumbnail": {},
        "footer": {
        "text": "üî∏ –¶–≤–µ—Ç —Ä–∞–º–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∑–∞–≤–∏—Å–∏—Ç –æ—Ç % –ø–æ–±–µ–¥ –∏—Å—Å–ª–µ–¥—É–µ–º–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞."
        },
        "fields": []
        }
        embed_stats = Embed.from_dict(emb_dict_stats)
      
        return embed_stats